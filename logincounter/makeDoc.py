#!/usr/bin/env python

# Generate the schema documentation for the warmup project
import os, sys
import time

from schemasByExample import Schema, SchemaValidator, schemaDocStyle
from server import TESTAPI_Controller, UsersController

def schemaDoc():
    """
    Generate the documentation for the schemas
    """
    def generateSection(outf, header="h2", anchor="", title=""):
        outf.write("<"+header+">")
        if anchor:
            outf.write("<a id='"+anchor+"'></a>")
        outf.write(title+"</"+header+">\n")


    def generateSchema(outf, header="h2", anchor="", title="", descr="", schema=None):
        generateSection(outf, header=header, anchor=anchor, title=title)
        outf.write(descr+"\n")
        html = Schema.htmlDoc(schema)
        outf.write(html+"\n")

    outf = sys.stdout


    outf.write(schemaDocStyle)

    outf.write("""
    <h1>JSON Schemas for CS169 Warmup Project</h1>

    This page documents the JSON schemas for the requests and responses for the CS169 Warmup project.
    <br>
    (This documentation was generated by <a href='schema_by_example.html'>Schema-By-Example</a> on %s)
""" % (time.asctime()))
    generateSection(outf, header="h2", anchor='login',
                    title='/users/login and /users/add request')


    outf.write(UsersController.docRequest_login)
    generateSchema(outf,
                   schema=UsersController.schemaRequest_loginOrAdd)

    outf.write(UsersController.docResponse_login)
    generateSchema(outf,
                   schema=UsersController.schemaResp_loginOrAdd)


    generateSection(outf, header="h2", title='/TESTAPI/resetFixture request',
                    anchor='resetFixture')

    outf.write(TESTAPI_Controller.docReq_resetFixture)
    outf.write(TESTAPI_Controller.docResp_resetFixture)
    generateSchema(outf,
                   schema=TESTAPI_Controller.schemaResp_resetFixture)

    generateSection(outf, header="h2", title='/TESTAPI/unitTests request',
                    anchor='unitTests')

    outf.write(TESTAPI_Controller.docReq_unitTests)
    outf.write(TESTAPI_Controller.docResp_unitTests)
    generateSchema(outf,
                   schema=TESTAPI_Controller.schemaResp_unitTests)


if __name__ == '__main__':
    schemaDoc()
